name: Deploy Metro Dashboard (Self-hosted)
on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: self-hosted
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env from prod secrets
        shell: bash
        run: |
          set -euo pipefail
          {
            echo "AWS_REGION=${{ secrets.AWS_REGION }}";
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}";
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}";
          } > .env
          chmod 600 .env

      # ----- NUEVO PASO DE DEBUG 1 -----
      - name: üïµÔ∏è [DEBUG] Check .env file content (secrets will be masked)
        shell: bash
        run: |
          echo "Checking content of .env file:"
          cat .env

      - name: Build & Up with docker-compose
        shell: bash
        run: |
          set -e
          docker-compose down --remove-orphans || true
          docker-compose up -d --build
          docker-compose ps
          docker logs --tail 50 metro_dashboard || true

      # ----- NUEVO PASO DE DEBUG 2 -----
      - name: üïµÔ∏è [DEBUG] Check environment variables INSIDE container
        shell: bash
        run: |
          echo "Checking environment inside 'metro_dashboard':"
          # Buscamos variables que empiecen con AWS
          docker exec metro_dashboard env | grep AWS || echo "No AWS env vars found inside container"

      # (Este es el paso que est√° fallando)
      - name: Verify AWS identity inside container
        shell: bash
        run: |
          set -e
          docker exec metro_dashboard aws sts get-caller-identity || (echo "AWS creds not working in container" && exit 1)
